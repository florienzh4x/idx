#!/usr/bin/env bash

API='https://indodax.com/api'

merah='\e[91m'
cyan='\e[96m'
kuning='\e[93m'
oren='\033[0;33m' 
margenta='\e[95m'
biru='\e[94m'
ijo="\e[92m"
putih="\e[97m"
normal='\033[0m'
bold='\e[1m'
labelmerah='\e[41m'
labelijo='\e[42m'
labelkuning='\e[43m'

clear;
printf "$bold"

ribu(){
    sed -re ' :restart ; s/([0-9])([0-9]{3})($|[^0-9])/\1.\2\3/ ; t restart '
}

getTradeInfo(){
	# getTradeInfo $pair $entryPrice $totalCoin $fee $targetProfit $includeFee
	sleep 1
	date=$(date '+%d-%B-%y %H:%M')
	pair="$1"
	pairTrade=$(echo "$1" | sed 's/\_//g')
	pairName=$(echo "$pair" | sed 's/\_.*//g' | tr '[:lower:]' '[:upper:]')
	entryPrice="$2"
	totalCoin="$3"
	cost=$(echo $entryPrice \* $totalCoin | bc | awk '{print ($0-int($0)<0.499)?int($0):int($0)+1}')

	lastPrice=$(curl -skL "$API/$pair/ticker" | jq -r .ticker.last)
	
	lastTradeData=$(curl -skL "$API/trades/$pairTrade")
	lastTradeType=$(echo "$lastTradeData" | jq -r .[0].type)
	lastTradePrice=$(echo "$lastTradeData" | jq -r .[0].price)
	lastTradeAmount=$(echo "$lastTradeData" | jq -r .[0].amount)
	lastTradeRp=$(echo $lastTradePrice \* $lastTradeAmount | bc | awk '{print ($0-int($0)<0.499)?int($0):int($0)+1}')

	revenue=$(echo $lastPrice \* $totalCoin | bc | awk '{print ($0-int($0)<0.499)?int($0):int($0)+1}')
	# count profit
	if [[ $revenue -ge $cost ]]; then
		
		profit=$(echo $revenue - $cost | bc -l | awk '{print ($0-int($0)<0.499)?int($0):int($0)+1}');
		percent=$(echo "$profit / $cost" | bc -l);
		percentage=$(echo "$(echo "scale=2; $percent * 100" | bc -l | bc -l | xargs printf "%.2f" | sed 's/\./,/g')");

		poinUp=$(echo "$lastPrice - $entryPrice" | bc -l)

		output="${cyan}[${putih}$(date '+%X')${cyan}] ${kuning}$pairName ${cyan}[${putih}Last Price: ${cyan}$lastPrice ${cyan}(${ijo}+$poinUp${cyan})] ${cyan}[${putih}Revenue:${cyan} $revenue ${putih}IDR ${cyan}(${ijo}+$profit ${putih}IDR${cyan}) (${ijo}+$percentage%${cyan})] [${putih}Last Trade Market: ${cyan}$lastTradeType ${cyan}(${putih}Rp.${cyan} ${putih}$lastTradeRp${cyan})]"
		echo -e "$output" | ribu
	# count loss
	elif [[ $revenue -lt $cost ]]; then
		profit=$(echo $cost - $revenue | bc -l | awk '{print ($0-int($0)<0.499)?int($0):int($0)+1}');
		percent=$(echo "$profit / $revenue" | bc -l);
		percentage=$(echo "$(echo "scale=2; $percent * 100" | bc -l | bc -l | xargs printf "%.2f" | sed 's/\./,/g')");

		if [[ $lastPrice > $entryPrice ]]; then
			poinDown=$(echo "$lastPrice - $entryPrice" | bc -l)

			output="${cyan}[${putih}$(date '+%X')${cyan}] ${kuning}$pairName ${cyan}[${putih}Last Price: ${cyan}$lastPrice ${cyan}(${ijo}+$poinDown${cyan})] ${cyan}[${putih}Revenue:${cyan} $revenue ${putih}IDR ${cyan}(${merah}-$profit${putih} IDR${cyan}) (${merah}-$percentage%${cyan})] [${putih}Last Trade Market: ${cyan}$lastTradeType ${cyan}(${putih}Rp.${cyan} ${putih}$lastTradeRp${cyan})]"
		elif [[ $lastPrice < $entryPrice ]]; then
			poinDown=$(echo "$entryPrice - $lastPrice" | bc -l)

			output="${cyan}[${putih}$(date '+%X')${cyan}] ${kuning}$pairName ${cyan}[${putih}Last Price: ${cyan}$lastPrice ${cyan}(${merah}-$poinDown${cyan})] ${cyan}[${putih}Revenue:${cyan} $revenue ${putih}IDR ${cyan}(${merah}-$profit${putih} IDR${cyan}) (${merah}-$percentage%${cyan})] [${putih}Last Trade Market: ${cyan}$lastTradeType ${cyan}(${putih}Rp.${cyan} ${putih}$lastTradeRp${cyan})]"
		elif [[ $lastPrice == $entryPrice ]]; then
			poinDown=$(echo "$entryPrice - $lastPrice" | bc -l)

			output="${cyan}[${putih}$(date '+%X')${cyan}] ${kuning}$pairName ${cyan}[${putih}Last Price: ${cyan}$lastPrice ${cyan}(${putih}$poinDown${cyan})] ${cyan}[${putih}Revenue:${cyan} $revenue ${putih}IDR ${cyan}(${merah}-$profit${putih} IDR${cyan}) (${merah}-$percentage%${cyan})] [${putih}Last Trade Market: ${cyan}$lastTradeType ${cyan}(${putih}Rp.${cyan} ${putih}$lastTradeRp${cyan})]"
		fi

		echo -e "$output" | ribu
		getTradeInfo $pair $entryPrice $totalCoin
	fi
}

if [[ -z $1 ]]; then
	echo "Usage: $0 (btc/bnb/doge/dll) (price masuk) (total coin)"
	exit 1;
fi
if [[ -z $2 ]]; then
	echo "Usage: $0 (btc/bnb/doge/dll) (price masuk) (total coin)"
	exit 1;
fi
if [[ -z $3 ]]; then
	echo "Usage: $0 (btc/bnb/doge/dll) (price masuk) (total coin)"
	exit 1;
fi

pair="$1_idr"
entryPrice="$2"
totalCoin="$3"

if [[ $totalCoin =~ "," ]]; then
	totalCoin=$(echo "$totalCoin" | sed 's/,/./g')
fi
getTradeInfo $pair $entryPrice $totalCoin